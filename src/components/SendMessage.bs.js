// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Fetch from "bs-fetch/src/Fetch.js";
import * as React from "react";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Json_decode from "@glennsl/bs-json/src/Json_decode.bs.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";

function decodemessage(json) {
  return /* record */[/* success */Json_decode.field("success", Json_decode.string, json)];
}

var component = ReasonReact.statelessComponent("SendMessage");

var message = {
  border: "1px solid grey",
  clear: "right",
  float: "right",
  height: "130px",
  marginTop: "10px",
  marginRight: "5%",
  padding: "10px",
  size: "200px",
  width: "430px",
  borderRadius: "8px",
  boxShadow: "10px 5px 5px blue"
};

var bouton = {
  backgroundColor: "white",
  border: "none",
  clear: "right",
  color: "#799dec",
  float: "right",
  fontSize: "18px",
  fontWeight: "bold",
  textDecoration: "none",
  textShadow: "0px 4px 2px rgba(0, 0, 0, 0.32), 0px 1px 0px #6182ca, 0px 2px 0px #4f6aa7, 0px 3px 0px #5470ad"
};

var texte = {
  border: "none",
  height: "85%",
  width: "100%"
};

var card = {
  border: "2px solid #898989",
  padding: "1rem",
  borderRadius: "4px"
};

var Styles = {
  card: card
};

function make(ctx, appSend, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              return React.createElement("form", {
                          onSubmit: (function (ev) {
                              ev.preventDefault();
                              Curry._1(appSend, /* UpdateInput */Block.__(0, [
                                      ctx[/* input */0],
                                      ctx[/* utilisateur */1]
                                    ]));
                              var payload = { };
                              payload["idCours"] = ctx[/* input */0];
                              payload["auteur"] = ctx[/* utilisateur */1];
                              payload["texte"] = ctx[/* text */2];
                              Curry._1(appSend, /* UpdateText */Block.__(1, [""]));
                              fetch("http://127.0.0.1:8080/message", Fetch.RequestInit.make(/* Post */2, {
                                            "Content-Type": "application/json"
                                          }, Caml_option.some(JSON.stringify(payload)), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* () */0)).then((function (prim) {
                                      return prim.json();
                                    }));
                              return Curry._1(appSend, /* Search */1);
                            })
                        }, React.createElement("div", {
                              style: message
                            }, React.createElement("textarea", {
                                  id: "search",
                                  style: texte,
                                  name: "search ",
                                  placeholder: "Something to say ?",
                                  value: ctx[/* text */2],
                                  onChange: (function (ev) {
                                      var value = ev.target.value;
                                      return Curry._1(appSend, /* UpdateText */Block.__(1, [value]));
                                    })
                                }), React.createElement("button", {
                                  style: bouton,
                                  type: "submit"
                                }, "ENVOYER")));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

export {
  decodemessage ,
  component ,
  message ,
  bouton ,
  texte ,
  Styles ,
  make ,
  
}
/* component Not a pure module */
